모델링 :
추상화(현실세계를 형식 맞춰 표현), 단순화(규약에 의해 표기법/언어로 표현), 명확화(애매모호함 제거, 정확하게 현상 표현)

모델링의 세가지 관점
1. 데이터 : 어떤 데이터와 관련있는지
2. 프로세스 : 무엇을 해야하는지 
3. 상관 : 일의 방법에 따라 데이터가 어떻게 영향받는지

데이터 모델링 :
정보시스템 구축을 위한 데이터 관점 업무 분석 기법
현실세계의 데이터를 약속된 표기법에 의해 표현
데이터베이스를 구축하기 위한 분석/설계의 과정

데이터 모델링 제공 기능
1. 가시화	2.명세화	3.구조화된 틀		4.문서화	5.다양한 관점		구체화

데이터 모델링의 중요성
1. 파급효과 : 데이터 설계가 가장 중요
2. 간결한 표현 : 데이터 모델은 명확, 간결하게 표현할 수 있는 도구

유의점!!
3. 데이터 품질 : 데이터 중복, 비 유연성, 비 일관성 발생 가능

데이터 모델링 단계
1. 개념정 데이터 모델링 : 추상화 수준이 높고, 업무 중심적, 포괄적인 수준의 데이터 모델링
2. 논리적 데이터 모델링 : 시스템으로 구축하고자 하는 업무에 대해 Key, 속성, 관계
3. 물리적 데이터 모델링 : 실제로 데이터베이스에 이식할 수 있도록 성능, 저장 등 물리적 성격 고려

데이터 독립성의 필요성
유지보수 비용 절감, 데이터 복잡도 낮춤, 데이터 중복 감소, 요구사항 대응

데이터베이스 3단계 구조
1. 외부 : 각 사용자가 보는 개인적 db스키마
2. 개념 : 개념 단계 하나의 개념적 스키마. 모든 사용자 관점을 "통합"한 조직 전체의 db
3. 내부 : db가 물리적으로 저장된 형식

데이터베이스 3단계 구조에서 독립성 2가지
1. 논리적 : 개념 스키마 변경되어도 외부 스키마에 영향 x
2. 물리적 : 내부 스키마 변경되어도 외부/개념 스키마에 영향x

데이터 모델링의 3가지 요소
1. 어떤 것(Things)
2. 성격(Attribute)
3. 관계(Relationships)

엔터티 : 어떤 것(Things)

엔터티 특징 : 
1. 업무에서 반드시 필요
2. 식별 가능
3. 인스턴스의 집합
4. 업무 프로세스에 의해 이용
5. 속성을 포함
6. 관계의 존재

엔터티의 분류 (중요!!) 유개사, 기중행
1. 유무형에 따른 분류
a. 유형
b. 개념
c. 사건

2. 발생시점에 따른 분류
a. 기본
b. 중심
c. 행위

엔터티의 명명
1. 가능하면 현업 업무에서 사용하는 용어 사용
2. 약어 지양
3. 단순 명사 사용
4. 유일한 이름
5. 엔터티 생성 의미대로 이름 부여

속성(Attribute) : 인스턴스에서 관리하고자 하는 의미상 더 이상 분리되지않는 최소의 데이터 단위

필수값(*), 선택값(0)

속성의 분류
1. "특성"에 따른 분류
a. 기본속성(Basic) : 업무분석을 통해 바로 정의한 속성
b. 설계속성(Designed) : 업무 상 존재하지는 않지만 설계하면서 도출되는 속성
c. 파생속성(Derived) : 다른 속성으로부터 계산 혹은 변형되어 생성되는 속성

2. "엔터티 구성방식"에 따른 분류
a. pk : 엔터티 식별할 수 있는 속성 
b. fk : 다른 엔터티와의 관계에서 포함된 속성
c. 일반 : 그 외 속성들

도메인(Domain)
속성 범위 ex) 학점 속성은 0.0에서 4.0사이 값 가진다.

속성의 명명
1. 해당 업무에서 사용하는 이름
2. 서술 식 속성 명 사용 x
3. 약어 사용 지양
4. 전체 데이터모델에서 유일성

관계(Relationships) :
엔터티의 인스턴스 사이의 논리적인 연관성

관계의 페어링 : 
각각의 엔터티의 인스턴스들은 자신이 관련된 인스턴스들과 관계의 어커런스로 참여하는 형태

관계의 분류
1. 존재에 의한 관계
2. 행위에 의한 관계

관계의 표기
1. 관계명 : 엔터티가 관계에 참여하는 형태
각각의 관계는 두 개의 관계명을 지니며 두 가지 관점으로 표현됨

2. 관계 차수
1:1, 1:M, M:N

3. 관계 선택 사양(Optionality)
필수적 관계, 선택적 관계

관계 정의 시 체크 사항
1. 두 개의 엔터티 사이에 관심있는 "연관 규칙"
2. "정보의 조합"
3. 업무기술서, 장표에 관계연결에 대한 "규칙이 서술"
4. 업무기술서, 장표에 관계연결을 가능하게 하는 동사(verb)

식별자(Identifier) : 
엔터티 내 인스턴스들을 구별하기 위한 구분자를 지칭

식별자 특징 :
1. 유일성 : 주식별자에 의해 엔터티 내에 모든 인스턴스들을 유일하게 구분
2. 최소성 : 주식별자를 구성하는 속성의 수는 유일성을 만족하는 최소의 수
3. 불변성 : 한 번 지정되면 값 변하지 않음
4. 존재성 : Null 값 x

식별자 분류
1. 대표성 여부
a. 주식별자 : 엔터티 내 각 행 구분, 다른 엔터티와 참조관계 연결 가능
b. 보조식별자 :  엔터티 내 각 행 구분, 다른 엔터티와 참조관계 x

2. 스스로 생성 여부
a.내부 식별자 : 엔터티 내부 스스로 만들어짐
b.외부 식별자 : 타 엔터티는 식별자

3. 속성의 수
a.단일 식별자 : 하나의 속성으로 구성
b.복합 식별자 : 둘 이상의 속성으로 구성

4. 대체여부
a. 본질식별자 : 업무에 의해 생성
b. 인조식별자 : 업무적으로 생성 x, 인위적으로 만든 식별자

식별자 도출 기준
1. 해당 업무에서 자주 이용되는 속성
2. 명칭, 내역 등과 같이 이름으로 기술되는 것들은 가능하면 지정 x
3. 복합으로 주식별자로 구성할 경우 너무 많은 속성이 포함되지 않도록 한다.

식별자관계와 비식별자 관계의 결정
식별관계자 : 받아온 외부식별자를 자신의 주 식별자로 이용, 부모가 반드시 있어야함.
비식별자 관계 : 받아온 외부식별자를 부모와 연결이 되는 속성으로만 이용, 부모가 딱히 없어도 됨.

식별자 관계로만 설정할 경우 데이터 모델의 흐름이 길어질수록 pk속성의 값이 증가하는 구조를 가지게 됨
-> 개발의 복잡성과 오류 가능성을 유발

다음 flow를 따라 비식별자관계를 선정하도록 하자
관계분석 -> 관계의 강/약 분석 -> 자식테이블 독립 pk필요 -> sql 복잡성 증가(개발 생산성 하락)
		약한관계시		독립pk구성시			pk속성 단순화시
				비식별자 관계 고려!!